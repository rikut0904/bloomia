services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bloomia_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=trust"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - bloomia_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bloomia_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bloomia_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bloomia_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
      - DEFAULT_BACKGROUND_COLOR=#fdf8f0
      - DEFAULT_THEME_COLOR=#FF7F50
      - THEME_NAME=coral
      # Auth0 Settings (設定が必要)
      - AUTH0_SECRET=${AUTH0_SECRET}
      - AUTH0_BASE_URL=${AUTH0_BASE_URL}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
    networks:
      - bloomia_network
    depends_on:
      - backend
      - postgres
      - redis
    # Remove volume mounts to use built files from Docker image
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    #   - /app/.next

  # Backend (Go)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bloomia_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - PORT=8080
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      # - AUTH0_AUDIENCE=${AUTH0_AUDIENCE:-https://bloomia.jp.auth0.com/api/v2/}
      - FRONTEND_URL=${FRONTEND_URL}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - RAILWAY_STORAGE_PATH=/app/storage
      - DEFAULT_THEME_COLOR=#FF7F50
      - DEFAULT_BACKGROUND_COLOR=#fdf8f0
      - ENABLE_WHITEBOARD=true
      - ENABLE_NOTES=true
      - ENABLE_GAMIFICATION=true
      - CORAL_THEME_ONLY=true
    networks:
      - bloomia_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - backend_storage:/app/storage
    # Healthcheck disabled for now - backend is minimal and doesn't include curl/wget
    # healthcheck:
    #   test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_storage:
    driver: local

networks:
  bloomia_network:
    driver: bridge